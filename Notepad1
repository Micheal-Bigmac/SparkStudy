在2015年 在实际项目做过关于Hbase 和Phoniex的整合,测试phoniex性能 测试结果差强人意 而且在hbase 中生成部分表 同时在原先表中添加一些phoniex 默认的协处理器.
首先性能没达到官网的性能 跟集群规模，phoniex 配置的内存大小有关。

2016/11/15 领导要使用kylin 在hbase 上层使用sql 的方式 对外提供接口.虽然没进行过相关测试,但是也一直关注, 个人给的建议是不可以. kylin 定位是OLAP 他的定位是为一些数据分析人员进行j低延迟的查询操作
虽然可以通过源码查看他的jdbc:kylin 或者rest 接口实现对外提供数据 . 对应已有的hbase 表中的数据 是无法实现领导不合适的要求
工作上的事抱怨归抱怨 但是还是要去做.因此写出下文,来说它实现的可能性.


 kylin由以下几部分组成：
· REST Server：提供一些restful接口，例如创建cube、构建cube、刷新cube、合并cube等cube的操作，project、table、cube等元数据管理、用户访问权限、系统配置动态修改等。除此之外还可以通过该接口实现SQL的查询，这些接口一方面可以通过第三方程序的调用，另一方也被kylin的web界面使用。
· jdbc/odbc接口：kylin提供了jdbc的驱动，驱动的classname为org.apache.kylin.jdbc.Driver，使用的url的前缀jdbc:kylin:，使用jdbc接口的查询走的流程和使用RESTFul接口查询走的内部流程是相同的。这类接口也使得kylin很好的兼容tebleau甚至mondrian。
· Query引擎：kylin使用一个开源的Calcite框架实现SQL的解析，相当于SQL引擎层。
· Routing：该模块负责将解析SQL生成的执行计划转换成cube缓存的查询，cube是通过预计算缓存在hbase中，这部分查询是可以再秒级甚至毫秒级完成，而还有一些操作使用过查询原始数据（存储在hadoop上通过hive上查询），这部分查询的延迟比较高。
· Metadata：kylin中有大量的元数据信息，包括cube的定义，星状模型的定义、job的信息、job的输出信息、维度的directory信息等等，元数据和cube都存储在hbase中，存储的格式是json字符串，除此之外，还可以选择将元数据存储在本地文件系统。
· Cube构建引擎：这个模块是所有模块的基础，它负责预计算创建cube，创建的过程是通过hive读取原始数据然后通过一些mapreduce计算生成Htable然后load到hbase中。


Kylin 查询 流程
	1 原始数据 通过hive 建立表与数据的关系从(上T 数据量)
    2 提交Sql 进行查询 
    3 Kylin 通过自己的Sql 解析器  分解不同的Cube(不同的维度) 把Cube中间数据存储在Hbase 不同的表 不同的表会创建默认的协处理器 
    4 根据不同的Sql group by order 等聚合函数 分别从不同的表中出去数据 进行纬度的结合，合并，得出最终结果返回数据



基于Hbase  查询 
	1 通过Hive 建立 关联Hbase表  
	2 通过jdbc:kylin 查询 即可



不适用原因：
	cube Size 决定并非速度
	不支持内链接
	kylin 无法对 其他表进行查询( 除依赖自身Cube 模型创建的表)
	MR 查询  +Hbase 内部扫描(maybe 接受)
	低延迟的查询 依赖内存和集群数量


对于目前Hbase 上T 的数据 通过kylin Sql 查询对外提供接口是不可行的 
